[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "oasis-crypto-trade"
version = "1.0.0"
description = "Enterprise-grade algorithmic trading system for cryptocurrency markets"
authors = ["Oasis Trading Systems <dev@oasis-crypto-trade.com>"]
license = "Proprietary"
readme = "README.md"
homepage = "https://oasis-crypto-trade.com"
repository = "https://github.com/oasis/oasis-crypto-trade"
documentation = "https://docs.oasis-crypto-trade.com"
keywords = ["trading", "cryptocurrency", "algorithmic", "quantitative", "fintech"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

[tool.poetry.dependencies]
python = "^3.11"

# Core Framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
starlette = "^0.27.0"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"

# Database & ORM
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
alembic = "^1.13.1"
psycopg = {extras = ["binary", "pool"], version = "^3.1.12"}
asyncpg = "^0.29.0"
redis = {extras = ["hiredis"], version = "^5.0.1"}

# Data Processing & Analysis
pandas = "^2.1.4"
numpy = "^1.26.2"
polars = "^0.20.2"
pyarrow = "^14.0.2"

# Trading & Financial
ccxt = {extras = ["base"], version = "^4.1.77"}
yfinance = "^0.2.22"
ta-lib = "^0.4.28"

# Machine Learning
torch = "^2.1.2"
scikit-learn = "^1.3.2"
lightgbm = "^4.1.0"
xgboost = "^2.0.3"

# Message Queue & Streaming
aiokafka = "^0.10.0"
aioredis = "^2.0.1"

# HTTP Client & APIs
httpx = "^0.25.2"
aiohttp = "^3.9.1"
websockets = "^12.0"

# Security & Authentication
cryptography = "^41.0.8"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"

# Configuration & Environment
python-decouple = "^3.8"
dynaconf = "^3.2.4"

# Monitoring & Observability
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
opentelemetry-instrumentation-sqlalchemy = "^0.42b0"
opentelemetry-instrumentation-redis = "^0.42b0"
opentelemetry-instrumentation-kafka-python = "^0.42b0"
opentelemetry-exporter-prometheus = "^1.12.0rc1"
prometheus-client = "^0.19.0"

# Logging
structlog = "^23.2.0"
python-json-logger = "^2.0.7"

# Task Queue
celery = {extras = ["redis"], version = "^5.3.4"}

# Utilities
python-dateutil = "^2.8.2"
pytz = "^2023.3"
orjson = "^3.9.10"
msgpack = "^1.0.7"

# Development Dependencies
[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
pytest-benchmark = "^4.0.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
respx = "^0.20.2"
pytest-httpx = "^0.26.0"

# Code Quality
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
bandit = "^1.7.5"
safety = "^2.3.4"
pre-commit = "^3.6.0"

# Documentation
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.14"
mkdocs-swagger-ui-tag = "^0.6.8"

# Profiling & Performance
py-spy = "^0.3.14"
memory-profiler = "^0.61.0"
line-profiler = "^4.1.1"

# Development Tools
ipython = "^8.18.1"
rich = "^13.7.0"

[tool.poetry.scripts]
oasis-engine = "apps.trading_engine.main:main"
oasis-data = "apps.market_data_service.main:main"
oasis-risk = "apps.risk_management.main:main"
oasis-analytics = "apps.analytics_service.main:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = ["oasis_crypto_trade", "apps", "libs"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "pandas", "numpy"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "ta.*",
    "yfinance.*",
    "pandas.*",
    "numpy.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=apps --cov=libs --cov-report=term-missing --cov-report=html"
testpaths = ["tests", "apps/*/tests", "libs/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests", 
    "slow: Slow tests",
    "external: Tests requiring external services",
    "trading: Trading-specific tests",
    "ml: Machine learning tests"
]

[tool.coverage.run]
source = ["apps", "libs"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "*/tests/*"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]